{
  "version": 3,
  "sources": ["../../@astrojs/solid-js/dist/client.js"],
  "sourcesContent": ["import { Suspense } from \"solid-js\";\nimport { createStore, reconcile } from \"solid-js/store\";\nimport { createComponent, hydrate, render } from \"solid-js/web\";\nconst alreadyInitializedElements = /* @__PURE__ */ new WeakMap();\nvar client_default = (element) => (Component, props, slotted, { client }) => {\n  if (!element.hasAttribute(\"ssr\")) return;\n  const isHydrate = client !== \"only\";\n  const bootstrap = isHydrate ? hydrate : render;\n  let slot;\n  let _slots = {};\n  if (Object.keys(slotted).length > 0) {\n    if (client !== \"only\") {\n      const iterator = document.createTreeWalker(element, NodeFilter.SHOW_ELEMENT, (node) => {\n        if (node === element) return NodeFilter.FILTER_SKIP;\n        if (node.nodeName === \"ASTRO-SLOT\") return NodeFilter.FILTER_ACCEPT;\n        if (node.nodeName === \"ASTRO-ISLAND\") return NodeFilter.FILTER_REJECT;\n        return NodeFilter.FILTER_SKIP;\n      });\n      while (slot = iterator.nextNode())\n        _slots[slot.getAttribute(\"name\") || \"default\"] = slot;\n    }\n    for (const [key, value] of Object.entries(slotted)) {\n      if (_slots[key]) continue;\n      _slots[key] = document.createElement(\"astro-slot\");\n      if (key !== \"default\") _slots[key].setAttribute(\"name\", key);\n      _slots[key].innerHTML = value;\n    }\n  }\n  const { default: children, ...slots } = _slots;\n  const renderId = element.dataset.solidRenderId;\n  if (alreadyInitializedElements.has(element)) {\n    alreadyInitializedElements.get(element)(\n      // reconcile will make sure to apply as little updates as possible, and also remove missing values w/o breaking reactivity\n      reconcile({\n        ...props,\n        ...slots,\n        children\n      })\n    );\n  } else {\n    const [store, setStore] = createStore({\n      ...props,\n      ...slots,\n      children\n    });\n    alreadyInitializedElements.set(element, setStore);\n    const dispose = bootstrap(\n      () => {\n        const inner = () => createComponent(Component, store);\n        if (isHydrate) {\n          return createComponent(Suspense, {\n            get children() {\n              return inner();\n            }\n          });\n        } else {\n          return inner();\n        }\n      },\n      element,\n      {\n        renderId\n      }\n    );\n    element.addEventListener(\"astro:unmount\", () => dispose(), { once: true });\n  }\n};\nexport {\n  client_default as default\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;AAGA,IAAM,6BAA6C,oBAAI,QAAQ;AAC/D,IAAI,iBAAiB,CAAC,YAAY,CAAC,WAAW,OAAO,SAAS,EAAE,OAAO,MAAM;AAC3E,MAAI,CAAC,QAAQ,aAAa,KAAK,EAAG;AAClC,QAAM,YAAY,WAAW;AAC7B,QAAM,YAAY,YAAY,UAAU;AACxC,MAAI;AACJ,MAAI,SAAS,CAAC;AACd,MAAI,OAAO,KAAK,OAAO,EAAE,SAAS,GAAG;AACnC,QAAI,WAAW,QAAQ;AACrB,YAAM,WAAW,SAAS,iBAAiB,SAAS,WAAW,cAAc,CAAC,SAAS;AACrF,YAAI,SAAS,QAAS,QAAO,WAAW;AACxC,YAAI,KAAK,aAAa,aAAc,QAAO,WAAW;AACtD,YAAI,KAAK,aAAa,eAAgB,QAAO,WAAW;AACxD,eAAO,WAAW;AAAA,MACpB,CAAC;AACD,aAAO,OAAO,SAAS,SAAS;AAC9B,eAAO,KAAK,aAAa,MAAM,KAAK,SAAS,IAAI;AAAA,IACrD;AACA,eAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,OAAO,GAAG;AAClD,UAAI,OAAO,GAAG,EAAG;AACjB,aAAO,GAAG,IAAI,SAAS,cAAc,YAAY;AACjD,UAAI,QAAQ,UAAW,QAAO,GAAG,EAAE,aAAa,QAAQ,GAAG;AAC3D,aAAO,GAAG,EAAE,YAAY;AAAA,IAC1B;AAAA,EACF;AACA,QAAM,EAAE,SAAS,UAAU,GAAG,MAAM,IAAI;AACxC,QAAM,WAAW,QAAQ,QAAQ;AACjC,MAAI,2BAA2B,IAAI,OAAO,GAAG;AAC3C,+BAA2B,IAAI,OAAO;AAAA;AAAA,MAEpC,UAAU;AAAA,QACR,GAAG;AAAA,QACH,GAAG;AAAA,QACH;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF,OAAO;AACL,UAAM,CAAC,OAAO,QAAQ,IAAI,YAAY;AAAA,MACpC,GAAG;AAAA,MACH,GAAG;AAAA,MACH;AAAA,IACF,CAAC;AACD,+BAA2B,IAAI,SAAS,QAAQ;AAChD,UAAM,UAAU;AAAA,MACd,MAAM;AACJ,cAAM,QAAQ,MAAM,gBAAgB,WAAW,KAAK;AACpD,YAAI,WAAW;AACb,iBAAO,gBAAgB,UAAU;AAAA,YAC/B,IAAI,WAAW;AACb,qBAAO,MAAM;AAAA,YACf;AAAA,UACF,CAAC;AAAA,QACH,OAAO;AACL,iBAAO,MAAM;AAAA,QACf;AAAA,MACF;AAAA,MACA;AAAA,MACA;AAAA,QACE;AAAA,MACF;AAAA,IACF;AACA,YAAQ,iBAAiB,iBAAiB,MAAM,QAAQ,GAAG,EAAE,MAAM,KAAK,CAAC;AAAA,EAC3E;AACF;",
  "names": []
}
